#version 330 core

layout(location = 0) in vec3 vertexPosition_modelspace;
layout(location = 1) in vec3 vertexNormal_modelspace;
layout(location = 2) in vec3 vertexColor;

uniform mat4 MVP;
uniform mat4 V;
uniform mat4 M;

out vec3 vertColor;
out vec3 normal_cameraspace;
out vec3 eyeDirection_cameraspace;

void main(){
    gl_Position = MVP * vec4(vertexPosition_modelspace, 1);
    vertColor = vertexColor;

    // Normal of the the vertex, in camera space
	normal_cameraspace = ( V * M * vec4(vertexNormal_modelspace,0)).xyz;

    // Vector that goes from the vertex to the camera, in camera space.
	// In camera space, the camera is at the origin (0,0,0).
	vec3 vertexPosition_cameraspace = ( V * M * vec4(vertexPosition_modelspace,1)).xyz;
	eyeDirection_cameraspace = vec3(0,0,0) - vertexPosition_cameraspace;
}